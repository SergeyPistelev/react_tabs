{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onSelectedTab","onTabSelected","selectedTab","find","tab","id","content","className","map","title","classNames","href","onClick","handleSelectedTab","App","defaultTab","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACeC,EACX,EADJC,cAEMC,EAAcJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAAkBD,EAAK,GAO/DQ,EAAYJ,EAAZI,QAER,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAJ,GACR,IAAQC,EAAcD,EAAdC,GAAII,EAAUL,EAAVK,MAEZ,OACE,oBACEF,UAAWG,IAAW,CACpB,YAAaR,EAAYG,KAAOA,IAElC,UAAQ,MAJV,SAOE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,kBA1BC,SAACR,GACrBF,EAAYG,KAAOD,EAAIC,IACzBL,EAAcI,GAwBaS,CAAkBT,IAHnC,SAKGK,KAPEL,EAAIC,WAenB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QC9CIR,EAAc,CACzB,CAAEO,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,gBAG7BQ,EAAgB,WAC3B,IAAMC,EAAajB,EAAK,GACxB,EAA0CkB,mBAASD,EAAWV,IAA9D,mBAAON,EAAP,KAAsBkB,EAAtB,KACMf,EAAcJ,EACjBK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAAkBgB,EAM5C,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBL,EAAYO,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfE,cAbe,SAACG,GACpBa,EAAiBb,EAAIC,WCjBzBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5fe5ac3c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected: onSelectedTab,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleSelectedTab = (tab: Tab) => {\n    if (selectedTab.id !== tab.id) {\n      onSelectedTab(tab);\n    }\n  };\n\n  const { content } = selectedTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': selectedTab.id === id,\n                })}\n                data-cy=\"Tab\"\n                key={tab.id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleSelectedTab(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const defaultTab = tabs[0];\n  const [selectedTabId, setSelectedTabId] = useState(defaultTab.id);\n  const selectedTab = tabs\n    .find(tab => tab.id === selectedTabId) || defaultTab;\n\n  const handleSelect = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}